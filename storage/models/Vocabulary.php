<?php namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * Eloquent class to describe the _vocabulary table
 *
 * automatically generated by ModelGenerator.php
 */
class Vocabulary extends Model
{
    protected $table = 'reg_vocabulary';

    public function getDates()
    {
        return array('deleted_at', 'last_updated');
    }

    protected $fillable = array('deleted_at', 'last_updated', 'name', 'note', 'uri', 'url',
        'base_domain', 'token', 'community', 'last_uri_id', 'language', 'languages', 'ns_type', 'prefixes', 'repos', 'repo');

    public function UserCreator()
    {
        return $this->belongsTo('App\Models\User', 'created_user_id', 'id');
    }

    public function UserUpdater()
    {
        return $this->belongsTo('App\Models\User', 'updated_user_id', 'id');
    }

    public function profile()
    {
        return $this->belongsTo('App\Models\Profile', 'profile_id', 'id');
    }

    public function Agent()
    {
        return $this->belongsTo('App\Models\Agent', 'agent_id', 'id');
    }

    public function Status()
    {
        return $this->belongsTo('App\Models\Status', 'status_id', 'id');
    }

    public function Collection()
    {
        return $this->hasMany('App\Models\Collection', 'vocabulary_id', 'id');
    }

    public function Concept()
    {
        return $this->hasMany('App\Models\Concept', 'vocabulary_id', 'id');
    }

    public function ConceptProperty()
    {
        return $this->hasMany('App\Models\ConceptProperty', 'scheme_id', 'id');
    }

    public function ConceptPropertyHistoryObject()
    {
        return $this->hasMany('App\Models\ConceptPropertyHistory', 'scheme_id', 'id');
    }

    public function ConceptPropertyHistory()
    {
        return $this->hasMany('App\Models\ConceptPropertyHistory', 'vocabulary_id', 'id');
    }

    public function Discuss()
    {
        return $this->hasMany('App\Models\Discuss', 'vocabulary_id', 'id');
    }

    public function FileImportHistory()
    {
        return $this->hasMany('App\Models\FileImportHistory', 'vocabulary_id', 'id');
    }

    public function VocabularyHasUser()
    {
        return $this->hasMany('App\Models\VocabularyHasUser', 'vocabulary_id', 'id');
    }

    public function VocabularyHasVersion()
    {
        return $this->hasMany('App\Models\VocabularyHasVersion', 'vocabulary_id', 'id');
    }

}

