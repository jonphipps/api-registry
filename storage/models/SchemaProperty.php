<?php namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 * Eloquent class to describe the reg_schema_property table
 *
 * automatically generated by ModelGenerator.php
 */
class SchemaProperty extends Model
{
    protected $table = 'reg_schema_property';

    use SoftDeletes;

    public function getDates()
    {
        return array('deleted_at');
    }

    protected $fillable = array('deleted_at', 'name', 'label', 'definition', 'comment', 'type', 'parent_uri', 'uri',
        'language', 'note', 'domain', 'orange', 'is_deprecated', 'url', 'lexical_alias');

    public function UserCreator()
    {
        return $this->belongsTo('App\Models\User', 'created_user_id', 'id');
    }

    public function UserUpdater()
    {
        return $this->belongsTo('App\Models\User', 'updated_user_id', 'id');
    }

    public function Schema()
    {
        return $this->belongsTo('App\Models\Schema', 'schema_id', 'id');
    }

    public function SchemaProperty()
    {
        return $this->belongsTo('App\Models\SchemaProperty', 'is_subproperty_of', 'id');
    }

    public function Status()
    {
        return $this->belongsTo('App\Models\Status', 'status_id', 'id');
    }

    public function Discuss()
    {
        return $this->hasMany('App\Models\Discuss', 'schema_property_id', 'id');
    }

    public function ParentSchemaProperty()
    {
        return $this->hasMany('App\Models\SchemaProperty', 'is_subproperty_of', 'id');
    }

    public function SchemaPropertyElement()
    {
        return $this->hasMany('App\Models\SchemaPropertyElement', 'schema_property_id', 'id');
    }

    public function RelatedSchemaPropertyElement()
    {
        return $this->hasMany('App\Models\SchemaPropertyElement', 'related_schema_property_id', 'id');
    }

    public function SchemaPropertyElementHistory()
    {
        return $this->hasMany('App\Models\SchemaPropertyElementHistory', 'schema_property_id', 'id');
    }

    public function SchemaPropertyElementObjectHistory()
    {
        return $this->hasMany('App\Models\SchemaPropertyElementHistory', 'related_schema_property_id', 'id');
    }

}

